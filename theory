
What  is framework ?
Web Application framerok   or Simply  Web Framework  represents a collection  of libraries
 and modules that enables  a web application developer  to write  application  without having
 to bother  about  low-level  details  such as protocols , thread management etc.

 What is Flask?
 Flask is a web application framework written in Python.
 It is developed by Armin Ronacher, who leads an international group of Python
 enthusiasts named Pocco. Flask is based on the Werkzeug WSGI toolkit and Jinja2 template
  engine. Both are Pocco projects.

WSGI
Web Server Gateway Interface (WSGI) has been adopted as a standard for Python web application development. WSGI is a specification for a universal interface between the web server and the web applications


Werkzeug
It is a WSGI toolkit, which implements requests, response objects, and other utility functions. This enables building a web framework on top of it. The Flask framework uses Werkzeug as one of its bases.


Jinja2
Jinja2 is a popular templating engine for Python. A web templating system combines a template with a certain data source to render dynamic web pages.

Flask is often referred to as a micro framework. It aims to keep the core of an application simple yet extensible. Flask does not have built-in abstraction layer for database handling, nor does it have form a validation support. Instead, Flask supports the extensions to add such functionality to the application. Some of the popular Flask extensions are discussed later in the tutorial.


Flask_varible rules :
It is possible to build a URL dynamically, by adding variable parts to the rule parameter. This variable part is marked as <variable-name>. It is passed as a keyword argument to the function with which the rule is associated.

In the following example, the rule parameter of route() decorator contains <name> variable part attached to URL ‘/hello’. Hence, if the http://localhost:5000/hello/TutorialsPoint is entered as a URL in the browser, ‘TutorialPoint’ will be supplied to hello() function as argument.


url building
the url_for() function  is very  usefull  for dynamically  building  a url  for  specific function. The function  accepts the name  of a function as
first argument, and  one or more keyword arguments , each corresponding  to the  variable  part of Url

Flask – HTTP methods
http protocol  is the foundation  of data communication in world   wide  web . Different  methods  of data  retrival  from  specified  url are defined in this
protocol

Get :::---sends data  in unencrypted  form to the server , Most  common method
Head:::-same as a get but  without response body


Post::--Used to send  Html form data to server . Data  reccieved  by Post method is not  cached  by server
Put ::-- Replace  all current  representation  of the target  resource  with the  uploaded content
delete::::---delete

